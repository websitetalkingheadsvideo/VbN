# LOTN Character Creator - Project Summary

## **Project Overview**
**Name:** LOTN Character Creator  
**Version:** 0.2.0  
**Type:** Web-based character creation system for Vampire: The Masquerade - Laws of the Night Revised (LOTN) tabletop RPG  
**Tech Stack:** PHP, MySQL, HTML, CSS, JavaScript  

## **Current Status**
âœ… **Completed:**
- Basic authentication system (login/logout/sessions)
- Database structure with comprehensive character tables
- Character creation form UI (8 tabs, responsive design)
- External CSS organization (`css/style.css`)
- External JavaScript organization (`js/script.js`)
- Task Master project management system initialized
- Database credentials fixed and centralized

## **Database Structure**
- **Main Tables:** `users`, `characters`
- **Character Detail Tables:** `character_traits`, `character_abilities`, `character_disciplines`, `character_backgrounds`, `character_merits_flaws`, `character_derangements`, `character_equipment`, `character_influences`, `character_rituals`, `character_status`

## **File Structure**
```
C:\Users\paris\VbN\
â”œâ”€â”€ css/style.css (external styles)
â”œâ”€â”€ js/script.js (external JavaScript)
â”œâ”€â”€ includes/connect.php (centralized DB connection)
â”œâ”€â”€ lotn_char_create.php (main character creation form)
â”œâ”€â”€ login.php, login_process.php, logout.php (auth system)
â”œâ”€â”€ dashboard.php (user dashboard)
â”œâ”€â”€ .taskmaster/ (project management)
â””â”€â”€ reference/ (LOTN rules and setting docs)
```

## **Current Tasks (Task Master)**
1. **Complete Character Creation Form** (High Priority) - 8 tabs need full implementation
2. **Implement Character Loading/Editing** (High Priority) - Database integration
3. **Add Character List to Dashboard** (Medium Priority) - Character management
4. **Complete JavaScript Functionality** (High Priority) - Trait selection, XP tracking
5. **Improve CSS Styling and Responsive Design** (Medium Priority)
6. **Add Error Handling and User Feedback** (Medium Priority)

## **Key Features Needed**
- **Character Creation:** 8-tab form (Basic Info, Traits, Abilities, Disciplines, Backgrounds, Morality, Merits & Flaws, Final Details)
- **XP System:** 30 starting XP, 7 free traits, 4 XP for traits 8-10
- **Trait System:** Physical/Social/Mental traits with card-based selection
- **Database Integration:** Save/load/edit characters
- **Validation:** LOTN rules compliance and form validation

## **LOTN Rules Context**
- **Setting:** Phoenix by Night (1994) - Prince dies on character's first night
- **System:** Card-based traits (not dots), 13 vampire clans + Caitiff
- **Character Types:** All vampire clans supported, PC/NPC designation
- **Morality:** Humanity path with Conscience, Self-Control, Courage virtues

## **Development Rules**
- **CSS:** External `css/style.css` files only
- **JavaScript:** External `js/script.js` files only  
- **Database:** Centralized `includes/connect.php` connection
- **Code Organization:** Clean separation of concerns
# LOTN Character Creator - Project Summary for Next Chat

## ðŸŽ¯ **Current Status: v0.2.1 - XAMPP + Python Integration Complete**

### **What's Working:**
- âœ… **XAMPP Development Environment** - Apache serving from `C:\Users\paris\VbN\`
- âœ… **MySQL Database** - Complete schema with 12 character tables
- âœ… **User Authentication** - Login system with role-based access (admin/user)
- âœ… **Character Ownership** - Users own their characters, admin sees all
- âœ… **Python Flask API** - RESTful endpoints for character management
- âœ… **Admin Panel** - Full character management interface

### **Access URLs:**
- **Main App:** http://localhost/
- **Character Creator:** http://localhost/lotn_char_create.php
- **Admin Panel:** http://localhost/admin_panel.php
- **Login:** http://localhost/login.php
- **Python API:** http://localhost:5000/api/health

### **Login Credentials:**
- **Admin:** `admin` / `password`
- **Test User:** `testuser` / `password`

### **Current Features (Working):**
- **Tab 1:** Basic Info (Character name, clan, generation, etc.)
- **Tab 2:** Traits System (Physical/Social/Mental with negative traits)
- **Tabs 3-8:** Placeholder (Abilities, Disciplines, Backgrounds, Morality, Merits & Flaws, Final Details)

### **Database Structure:**
- **12 Tables:** users, characters, character_traits, character_abilities, character_disciplines, character_backgrounds, character_merits_flaws, character_morality, character_derangements, character_equipment, character_influences, character_rituals, character_status
- **User Ownership:** Each character linked to user_id
- **Admin Access:** Can see/edit all characters

### **Development Environment:**
- **XAMPP:** Apache + MySQL running
- **Python:** Flask API server (optional)
- **Database:** `lotn_characters` in MySQL
- **Setup Scripts:** `setup_database.php`, `check_users.php`, `start_development.bat`

### **Next Development Priorities:**
1. **Complete Tab 3:** Abilities system
2. **Complete Tab 4:** Disciplines system  
3. **Complete Tab 5:** Backgrounds system
4. **Complete Tab 6:** Morality & Stats system
5. **Complete Tab 7:** Merits & Flaws system
6. **Complete Tab 8:** Final Details system
7. **Character Loading/Editing:** Load existing characters for editing

### **Technical Stack:**
- **Frontend:** HTML5, CSS3, JavaScript (vanilla)
- **Backend:** PHP 8.2.12, MySQL 8.0
- **API:** Python Flask (optional)
- **Server:** XAMPP Apache 2.4.58
- **Version Control:** Git (pushed to GitHub)

### **Key Files:**
- `lotn_char_create.php` - Main character creation form
- `save_character.php` - Character saving handler
- `admin_panel.php` - Admin character management
- `python_api.py` - Flask API server
- `setup_xampp.sql` - Database schema
- `js/script.js` - Frontend JavaScript
- `includes/connect.php` - Database connection

### **Project Location:**
- **Local:** `C:\Users\paris\VbN\`
- **XAMPP:** Served from same directory
- **Git:** Pushed to GitHub repository

**Ready for next development phase!** ðŸš€

## **Next Priority**
Complete the character creation form implementation - currently only Basic Info and partial Traits tabs are functional. Need to implement all 8 tabs with proper content, JavaScript functionality, and database integration.